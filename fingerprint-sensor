#include <Adafruit_Fingerprint.h>
#include<ModbusRtu.h>      
Modbus bus;
unsigned long timer1;
bool attachedFinger = false;
int id;

// Инициализация Software Serial для датчика отпечатков пальцев
SoftwareSerial mySerial(2, 3); // mySerial(TX, RX)

// Инициализация объекта для датчика отпечатков пальцев
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

// Инициализация массива в который будет записываться номер "id"
int sentById [1] = {0};

void setup()
{
  bus = Modbus(1,Serial,5);
  bus.begin(9600);
  Serial.begin(9600);
  delay(100);
//  Serial.println("\n\nAdafruit finger detect test");

  // set the data rate for the sensor serial port
  finger.begin(57600);
  delay(5);
//  if (finger.verifyPassword()) {
//    Serial.println("Found fingerprint sensor!");
//  } else {
//    Serial.println("Did not find fingerprint sensor :(");
//    while (1) { delay(1); }
//  }

//  Serial.println(F("Reading sensor parameters"));
//  finger.getParameters();
//  Serial.print(F("Status: 0x")); Serial.println(finger.status_reg, HEX);
//  Serial.print(F("Sys ID: 0x")); Serial.println(finger.system_id, HEX);
//  Serial.print(F("Capacity: ")); Serial.println(finger.capacity);
//  Serial.print(F("Security level: ")); Serial.println(finger.security_level);
//  Serial.print(F("Device address: ")); Serial.println(finger.device_addr, HEX);
//  Serial.print(F("Packet len: ")); Serial.println(finger.packet_len);
//  Serial.print(F("Baud rate: ")); Serial.println(finger.baud_rate);

//  finger.getTemplateCount();

//  if (finger.templateCount == 0) {
//    Serial.print("Sensor doesn't contain any fingerprint data. Please run the 'enroll' example.");
//  }
//  else {
//    Serial.println("Waiting for valid finger...");
//      Serial.print("Sensor contains "); Serial.print(finger.templateCount); Serial.println(" templates");
//  }
}

void loop()                     // run over and over again
{
  // Пока палец не тронул сенсор будет выполняться следующий код
  if(!attachedFinger){
    // Получаем id отпечатка
    id = getFingerprintIDez();
    }

  // Если палец тронул сенсор и прошла 1 секунда, переменная attachedFinger = false.
//  Это нужно для 2-ух целей:
//  1) Чтобы отпечаток не считывался более 1-го раза в течении 1-ой секунды
//  2) Чтобы отправка на OPC сервер была более стабильной, т.к. без таймера в случае удержания пальца на датчике, увеличивается время ответа.
  if (attachedFinger == true && millis() - timer1 > 1000){
    attachedFinger = false;
    }

  delay(50);            //don't ned to run this at full speed.

  sentById[0] = id;
  bus.poll(sentById, 1);
}

// returns -1 if failed, otherwise returns ID #
int getFingerprintIDez() {
  uint8_t p = finger.getImage();
  if (p != FINGERPRINT_OK)  return -1;

  // При сканировании пальца обновляется таймер и bool переменная attachedFinger = true
  attachedFinger = true;
  timer1 = millis();

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.fingerFastSearch();
  if (p != FINGERPRINT_OK)  return -1;

  // found a match!
//  Serial.print("Found ID #"); Serial.print(finger.fingerID);
//  Serial.print(" with confidence of "); Serial.println(finger.confidence);
  return finger.fingerID;
}
